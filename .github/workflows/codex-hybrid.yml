name: Hybrid Codex Review (Local Priority)

on:
  pull_request:
    types: [opened, synchronize]

  issue_comment:
    types: [created]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  detect-review-mode:
    runs-on: ubuntu-latest
    outputs:
      mode: ${{ steps.detect.outputs.mode }}
      should-run: ${{ steps.detect.outputs.should-run }}

    steps:
      - name: Detect review mode
        id: detect
        uses: actions/github-script@v7
        with:
          script: |
            const context = require('@actions/github').context;

            // Check if this is a comment trigger
            if (context.eventName === 'issue_comment') {
              const comment = context.payload.comment.body;

              // Check for local review completion
              if (comment.includes('Local Codex Review Results')) {
                core.setOutput('mode', 'local-complete');
                core.setOutput('should-run', 'false');
                return;
              }

              // Check for codex commands
              if (comment.includes('/codex:')) {
                // Check user's subscription status (from config)
                const localUsers = ['morimorijap']; // Users with ChatGPT Plus
                const isLocalUser = localUsers.includes(context.payload.comment.user.login);

                if (isLocalUser && comment.includes('--local')) {
                  core.setOutput('mode', 'local');
                  core.setOutput('should-run', 'true');
                } else if (comment.includes('--remote')) {
                  core.setOutput('mode', 'remote');
                  core.setOutput('should-run', 'true');
                } else {
                  // Default based on user
                  core.setOutput('mode', isLocalUser ? 'local' : 'remote');
                  core.setOutput('should-run', 'true');
                }
                return;
              }
            }

            // Pull request event - check author
            if (context.eventName === 'pull_request') {
              const author = context.payload.pull_request.user.login;
              const localUsers = ['morimorijap'];

              if (localUsers.includes(author)) {
                core.setOutput('mode', 'local');
                core.setOutput('should-run', 'true');
              } else {
                core.setOutput('mode', 'remote');
                core.setOutput('should-run', 'true');
              }
            }

  local-review-instructions:
    needs: detect-review-mode
    if: needs.detect-review-mode.outputs.mode == 'local' && needs.detect-review-mode.outputs.should-run == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Generate review script
        id: script
        run: |
          cat > local-review.sh << 'EOF'
          #!/bin/bash
          # Local Codex Review Script

          echo "🔍 Starting local Codex review..."

          # Get PR number
          PR_NUMBER=${{ github.event.pull_request.number || github.event.issue.number }}

          # Review changed files
          git diff origin/main...HEAD --name-only | while read file; do
            if [[ $file =~ \.(js|ts|py|java)$ ]]; then
              echo "Reviewing: $file"
              codex review --file "$file" --format json >> codex-results.json
            fi
          done

          echo "✅ Review complete. Results saved to codex-results.json"
          EOF

          chmod +x local-review.sh

      - name: Post local review instructions
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.issue.number;

            const instructions = `## 🖥️ Local Codex Review Required

            You're using ChatGPT Plus subscription for free reviews! 🎉

            ### Quick Review (Recommended)
            \`\`\`bash
            # In your Claude Code terminal:
            gh pr checkout ${prNumber}
            npm run codex:local-review
            npm run codex:push-results
            \`\`\`

            ### Manual Review
            \`\`\`bash
            # 1. Checkout PR
            gh pr checkout ${prNumber}

            # 2. Run local Codex CLI
            codex review --file . --recursive

            # 3. Post results as comment
            gh pr comment ${prNumber} --body "$(codex format-results)"
            \`\`\`

            ### Alternative: Use Web Interface
            1. Copy changed files to ChatGPT
            2. Ask for code review
            3. Paste results here

            ---
            *This saves API costs by using your ChatGPT Plus subscription* 💰
            *To use API instead, comment: \`/codex:review --remote\`*`;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: instructions
            });

            // Add label
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              labels: ['awaiting-local-review']
            });

  remote-review-fallback:
    needs: detect-review-mode
    if: needs.detect-review-mode.outputs.mode == 'remote' && needs.detect-review-mode.outputs.should-run == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run remote Codex review
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          echo "🌐 Running remote Codex review (API)..."

          # This would normally call the OpenAI API
          # For now, we'll create a mock response
          cat > analysis.json << 'EOF'
          {
            "mode": "remote",
            "timestamp": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
            "message": "Remote review via API",
            "suggestions": []
          }
          EOF

      - name: Post remote review results
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const analysis = JSON.parse(fs.readFileSync('analysis.json', 'utf8'));

            const comment = `## 🌐 Remote Codex Review (API)

            **Mode**: API-based review
            **Timestamp**: ${analysis.timestamp}

            ### 📊 Results
            ${analysis.suggestions.length > 0 ?
              analysis.suggestions.map(s => `- ${s.message}`).join('\n') :
              '✅ No issues found'}

            ---
            *This review used API credits. Consider using local review with ChatGPT Plus to save costs.*
            *To use local review next time: \`/codex:review --local\`*`;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: comment
            });

  process-local-results:
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'issue_comment' &&
      contains(github.event.comment.body, 'Local Codex Review Results')

    steps:
      - name: Process local results
        uses: actions/github-script@v7
        with:
          script: |
            const comment = context.payload.comment.body;
            const prNumber = context.issue.number;

            // Extract suggestions from comment
            const suggestionCount = (comment.match(/\d+\. \*\*/g) || []).length;

            // Remove awaiting label, add reviewed label
            try {
              await github.rest.issues.removeLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                name: 'awaiting-local-review'
              });
            } catch (e) {
              // Label might not exist
            }

            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              labels: ['codex-reviewed', `suggestions-${suggestionCount}`]
            });

            // Post confirmation
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: `✅ Local review processed successfully!

              - **Suggestions found**: ${suggestionCount}
              - **Review type**: Local (ChatGPT Plus)
              - **API costs**: $0.00

              The PR is ready for human review.`
            });